---
- name: uninstall old docker
  become: yes
  apt: pkg={{ item }} force=yes state=absent purge=yes
  with_items:
    - docker
    - docker-engine
    - docker-compose

- name: update apt sources
  become: yes
  apt: pkg={{ item }} force=yes update_cache=yes state=latest
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common

- name: download GPG key
  get_url:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    dest: /tmp/docker-gpg
    
- name: add new GPG key
  become: yes
  command: "apt-key add /tmp/docker-gpg"

- name: ubuntu_version
  shell: "lsb_release -cs"
  register: ubuntu_version

- name: add apt entry
  become: yes
  command: "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable\""
  # when: ansible_distribution_version == '16.04'

- name: install docker
  become: yes
  apt: pkg={{ item }} update_cache=yes state=latest
  with_items:
    - docker-ce

- name: mkdir docker image path
  become: yes
  file:
    path: "{{ docker_image_path }}"
    state: directory
    mode: 0711
    
- name: setup docker image path
  become: yes
  lineinfile:
    dest: /lib/systemd/system/docker.service
    regexp: "ExecStart="
    line: "ExecStart=/usr/bin/dockerd -H fd:// -g {{ docker_image_path }}"
  notify: restart docker server
  changed_when: True
    
- name: start docker daemon
  become: yes
  service: name=docker enabled=yes state=started
  notify: restart docker server

- name: add users to docker group
  become: yes
  user:
    append: yes
    groups: docker
    name: "{{ item }}"
  with_items: "{{ docker_users }}"
  
