---
- include_tasks: gridengine-master-ubuntu1604.yml
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == "16.04"

- include_tasks: gridengine-master-ubuntu1804.yml
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == "18.04"


- name: start gridengine-master daemon
  service: name=gridengine-master state=started enabled=yes

- name: make bin dir
  become: yes
  file: path=/usr/local/gridengine/bin state=directory owner=root group=root mode=0755
- name: make data dir
  become: yes
  file: path=/usr/local/gridengine/data state=directory owner=root group=root mode=0755
- name: initialize data dir
  become: yes
  shell: rm /usr/local/gridengine/data/*
  ignore_errors: yes
  
- name: set initial scripts
  become: yes
  template:
    src: setup.sh
    dest: /usr/local/gridengine/bin/setup.sh
    mode: 0755
    force: yes

- name: set conf updater
  become: yes
  copy:
    src: sge.conf.sh
    dest: /usr/local/gridengine/bin/
    mode: 0755
    force: yes

- name: replace rlogin_daemon
  become: yes
  shell: /usr/local/gridengine/bin/sge.conf.sh mconf rlogin_daemon builtin
- name: replace rlogin_command
  become: yes
  shell: /usr/local/gridengine/bin/sge.conf.sh mconf rlogin_command builtin
- name: replace qlogin_daemon
  become: yes
  shell: /usr/local/gridengine/bin/sge.conf.sh mconf qlogin_daemon builtin
- name: replace qlogin_command
  become: yes
  shell: /usr/local/gridengine/bin/sge.conf.sh mconf qlogin_command builtin
- name: replace rsh_daemon
  become: yes
  shell: /usr/local/gridengine/bin/sge.conf.sh mconf rsh_daemon builtin
- name: replace ssh_command
  become: yes
  shell: /usr/local/gridengine/bin/sge.conf.sh mconf rsh_command builtin
    
- name: set hostlist
  become: yes
  template:
    src: hostlist.tmpl
    dest: /usr/local/gridengine/data/hostlist-{{ item.name }}
    force: yes
  with_items: |
    {% set o = [] %}
    {% for k, v in gridengine_hostgroups.items() %}
    {%   set _ = o.append({"name": k, "hosts": v }) %}
    {% endfor %}
    {{ o }}

- name: set queue list
  become: yes
  template:
    src: queue.tmpl
    dest: /usr/local/gridengine/data/queue-{{ item.name }}
    force: yes
  with_items: |
    {% set o = [] %}
    {% for k, v in gridengine_queue_list.items() %}
    {%   set _ = o.append({"name": k, "hostlist": v.hostlist, "slots": v.slots }) %}
    {% endfor %}
    {{ o }}
    
- name: set pe file
  become: yes
  template:
    src: pe-{{ item }}.tmpl
    dest: /usr/local/gridengine/data/pe-{{ item }}
    force: yes
  with_items:
    - smp
    - mpich
    - openmpi

- name: exec setup script
  become: yes
  command: /usr/local/gridengine/bin/setup.sh
    
- name: restart gridengine-master daemon
  become: yes
  service: name=gridengine-master state=restarted 
  
