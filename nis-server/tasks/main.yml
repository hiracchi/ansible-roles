# {{ nis_securentes_netmask }}         {{ nis_securenets_network }}
# nis_domainname
# nis_servername
---
- name: install nis server
  become: yes
  apt: 
    pkg:
      - nis
    state: latest

- name: edit yp.conf
  become: yes
  template:
    src: yp.conf.tmpl
    dest: /etc/yp.conf
  notify: restart nis server

- name: setup ypserv.securenets
  become: yes
  template: src=ypserv.securenets.tmpl dest=/etc/ypserv.securenets
  notify: restart nis server

- name: setup nis Makefile
  become: yes
  template: src=Makefile.tmpl dest=/var/yp/Makefile
  notify: restart nis server

- name: debug var nis_task
  debug:
    msg: "nis_task = {{ nis_task }}"

- name: setup nis role
  become: yes
  lineinfile:
    dest: /etc/default/nis
    regexp: "^NISSERVER=*"
    line: "NISSERVER={{ nis_task }}"
  notify: restart nis server
    
- name: initialize nis database for master
  become: yes
  command: /usr/lib/yp/ypinit -m
  notify: restart nis server
  when: 
    - nis_initialize | bool
    - nis_task == "master"

- name: initialize nis database for slave
  become: yes
  command: /usr/lib/yp/ypinit -s
  notify: restart nis server
  when:
    - nis_initialize | bool
    - nis_task == "slave"

- name: add NIS group
  become: yes
  group:
    name: "{{ item.key }}"
    gid: "{{ item.value.gid }}"
    state: present
  with_dict: "{{ nis_groups | default({}) }}"
  when:
    - nis_task == "master"
    
- name: add NIS users
  become: yes
  user:
    name: "{{ item.key }}"
    groups: "{{ item.value.groups | default('') }}"
    group: "{{ item.value.group }}"
    state: present
    uid: "{{ item.value.uid }}"
    home: "{{ item.value.home }}"
    shell: "{{ item.value.shell | default('/bin/bash') }}"
    createhome: no
  with_dict: "{{ nis_users | default({}) }}"
  when:
    - nis_task == "master"
      
- name: update NIS user password
  become: yes
  user:
    name: "{{ item.key }}"
    password: "{{ item.value.password | password_hash('sha512') }}"
  when:
    - item.value.password is defined
    - item.value.update_password is defined
    - item.value.update_password
    - nis_task == "master"
  with_dict: "{{ nis_users | default({}) }}"
        
- name: update nis database
  become: yes
  command: make -C /var/yp
  when:
    - nis_task == "master"

- name: start service rpcbind
  become: yes
  service:
    name: rpcbind
    enabled: yes  
    state: started

- name: start service nis
  become: yes
  service:
    name: nis
    enabled: yes
    state: started


